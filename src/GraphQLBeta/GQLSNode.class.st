"
I represent a node generated by parsing the schema text

Public API and Key Messages

- acceptVisitor:
- initialize
- position
- position:
- comments
- comments:

    Instance Variables
	position:		<Integer>

"
Class {
	#name : #GQLSNode,
	#superclass : #GQLSAbstractNode,
	#instVars : [
		'description',
		'comments'
	],
	#category : #'GraphQLBeta-NodesSchema'
}

{ #category : #adding }
GQLSNode >> addComments: aArray [
	aArray do: [ :aArr | 
		(aArr isNotNil and: [ aArr isNotEmpty ]) ifTrue: [ comments addAll: aArr ]
	]
]

{ #category : #accessing }
GQLSNode >> comments [
	^ comments
]

{ #category : #accessing }
GQLSNode >> comments: anObject [
	comments := anObject
]

{ #category : #accessing }
GQLSNode >> description [
	^ description value
]

{ #category : #accessing }
GQLSNode >> description: anObject [
	description := anObject
]

{ #category : #initialization }
GQLSNode >> initialize [
"The default position is 0 and description is nil"
	description := nil.
	comments := OrderedCollection new.
]

{ #category : #testing }
GQLSNode >> isNullType [
	^ false
]

{ #category : #testing }
GQLSNode >> isSchemaDefinitionNode [
	^ false
]

{ #category : #testing }
GQLSNode >> isTypeExtensionNode [
	^ false
]

{ #category : #testing }
GQLSNode >> isTypeNode [
	^ false
]
