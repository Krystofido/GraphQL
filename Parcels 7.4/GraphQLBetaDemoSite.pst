<?xml version="1.0"?><st-source><!-- Name: GraphQLBetaDemoSiteBundleName: GraphQLBetaDemoSiteBundleStructure: a Store.BundleForParcelParcel: #('GraphQLBetaDemoSite')ParcelName: GraphQLBetaDemoSiteDate: 4:22:01 pm July 24, 2018 --><time-stamp>From VisualWorksÂ®, 7.4 of December 5, 2005 on July 24, 2018 at 4:22:01 pm</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>GraphQLWVPlatform</name><environment>Smalltalk</environment><super>GraphQLBeta.GraphQLPlatform</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>GraphQLBetaDemoSite</category><attributes><package>GraphQLBetaDemoSite</package></attributes></class><class><name>GraphQLSwazoo</name><environment>Smalltalk</environment><super>Swazoo.SwazooSite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>demo </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>GraphQLBetaDemoSite</category><attributes><package>GraphQLBetaDemoSite</package></attributes></class><methods><class-id>GraphQLWVPlatform</class-id> <category>initialize-release</category><body package="GraphQLBetaDemoSite" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><methods><class-id>GraphQLWVPlatform</class-id> <category>server</category><body package="GraphQLBetaDemoSite" selector="okResponse:">okResponse: string	| response arr |	response := Swazoo.HTTPResponse ok.	arr := ByteArray fromString: string encoding: 'default'.	response		contentType: Net.MimeTypeDescriptor contentTypeHtml;		entity: arr.	^ response</body><body package="GraphQLBetaDemoSite" selector="registerDemoServer:">registerDemoServer: demo	| site |	site := Swazoo.SwazooServer singleton siteNamed: 'graphql'.	site isNil ifTrue: [ 		site := GraphQLSwazoo newNamed: 'graphql'.		site demo: demo.		site host: '*' ip: '*' port: 8888 ].	site start.</body><body package="GraphQLBetaDemoSite" selector="request:at:">request: aRequest at: nameQuery	^ (aRequest queryAt: nameQuery ifAbsent:['']) trimBoth.</body><body package="GraphQLBetaDemoSite" selector="serverStop">serverStop	| site |	site := Swazoo.SwazooServer singleton siteNamed: 'graphql'.	^site notNil ifTrue: [site stop. site] ifFalse: [nil].</body></methods><methods><class-id>GraphQLWVPlatform</class-id> <category>accessing - classes</category><body package="GraphQLBetaDemoSite" selector="classAt:">classAt: aSymbol	^ Smalltalk allClasses detect: [:cls | 		cls name = aSymbol ].</body><body package="GraphQLBetaDemoSite" selector="jsonWriter">jsonWriter	^ JSONEncoder</body><body package="GraphQLBetaDemoSite" selector="toJson:">toJson: object	^ self jsonWriter toStringPretty: object</body></methods><methods><class-id>GraphQLWVPlatform class</class-id> <category>instance creation</category><body package="GraphQLBetaDemoSite" selector="isActive">isActive	^ true</body><body package="GraphQLBetaDemoSite" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>GraphQLSwazoo</class-id> <category>initialize-release</category><body package="GraphQLBetaDemoSite" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><methods><class-id>GraphQLSwazoo</class-id> <category>accessing</category><body package="GraphQLBetaDemoSite" selector="demo:">demo: aDemo	demo := aDemo</body></methods><methods><class-id>GraphQLSwazoo</class-id> <category>private</category><body package="GraphQLBetaDemoSite" selector="helpResolve:">helpResolve: aResolution 	(self canAnswer and: [aResolution siteMatch: self]) ifFalse: [^nil].	^self answerTo: aResolution request</body></methods><methods><class-id>GraphQLSwazoo</class-id> <category>serving</category><body package="GraphQLBetaDemoSite" selector="answerTo:">answerTo: aRequest	| b ans|	b := [ ans := demo answerTo: aRequest].	b on: Error do: [:ex | self halt. b value ].	^ ans</body></methods><methods><class-id>JSONEncoder class</class-id> <category>utility</category><body package="GraphQLBetaDemoSite" selector="toStringPretty:">toStringPretty: string	| stream |	stream := String new writeStream.	(self on: stream pretty: true indent: 2) encode: string.	^ stream contents</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>GraphQLPlatform</name><environment>GraphQLBeta</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>instance </class-inst-vars><imports></imports><category>GraphQLBeta</category><attributes><package>GraphQLBeta</package></attributes></class><class><name>SwazooSite</name><environment>Swazoo</environment><super>Swazoo.CompositeResource</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name serving </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Swazoo-Core</category><attributes><package>Swazoo-Core</package></attributes></class></st-source>